{
    "schema_version": "v1",
    "name_for_human": "Message Plugin (no auth)",
    "name_for_model": "message",
    "description_for_human": "Plugin enabled development tools through standardized messages.",
      "description_for_model": "This is an intelligent development system.  It allows you to fully remote control entire environments by empowering you to fully remote control the environment by sending and receiving messages to the smart agent, which is capable of executing any and all required development tasks you can think of.  The simplest and most common form of task to send the agent are unix and CLI commands in the message_type wsl-bash.  You can edit, build, compile, deploy, refactor.  You can even use this as a means for dynamically enhancing capabilities by installing CLIs and other tools at run time using sudo apt get.  Example Sequence: \"{\\n  \\\"message_type\\\": \\\"dev_team\\\",\\n  \\\"content\\\": \\\"write hello world in python\\\"\\n}\\n{\\n  \\\"message_type\\\": \\\"wsl-bash\\\",\\n  \\\"content\\\": \\\"cd /repos/agent_plugin && git init\\\"\\n}\\n{\\n  \\\"message_type\\\": \\\"wsl-bash\\\",\\n  \\\"content\\\": \\\"mkdir -p ./new_directory\\\"\\n}\\n{\\n  \\\"message_type\\\": \\\"wsl-bash\\\",\\n  \\\"content\\\": \\\"cd /repos/agent_plugin/.well-known && git init\\\"\\n}\\n{\\n  \\\"message_type\\\": \\\"wsl-bash\\\",\\n  \\\"content\\\": \\\"cd /repos/agent_plugin/.well-known && git config --global user.email\\\"\\n}\\n{\\n  \\\"message_type\\\": \\\"wsl-bash\\\",\\n  \\\"content\\\": \\\"apt-get install -y openapi-generator && openapi-generator generate -i /repos/agent_plugin/openapi.yaml -g python-flask -o /repos/agent_plugin/server\\\"\\n}\\n{\\n  \\\"message_type\\\": \\\"wsl-bash\\\",\\n  \\\"content\\\": \\\"apt-get install -y newman && openapi-generator generate -i /repos/agent_plugin/openapi.yaml -g postman -o /repos/agent_plugin/postman_tests\\\"\\n}\\n{\\n  \\\"message_type\\\": \\\"wsl-bash\\\",\\n  \\\"content\\\": \\\"cd /repos/agent_plugin && python -m unittest\\\"\\n}\\n{\\n  \\\"message_type\\\": \\\"wsl-bash\\\",\\n  \\\"content\\\": \\\"cd /repos/agent_plugin && newman run /repos/agent_plugin/postman_tests/agent_plugin.postman_collection.json\\\"\\n}\\n{\\n  \\\"message_type\\\": \\\"wsl-bash\\\",\\n  \\\"content\\\": \\\"cd /repos/agent_plugin && git add .\\\"\\n}\\n{\\n  \\\"message_type\\\": \\\"wsl-bash\\\",\\n  \\\"content\\\": \\\"cd /repos/agent_plugin && git commit -m \\\\\\\"Initial commit\\\\\\\"\\\"\\n}\\n{\\n  \\\"message_type\\\": \\\"wsl-bash\\\",\\n  \\\"content\\\": \\\"cd /repos/agent_plugin && git remote add origin\\n}\\n{\\n  \\\"message_type\\\": \\\"wsl-bash\\\",\\n  \\\"content\\\": \\\"cd /repos/agent_plugin/server && python main.py\\\"\\n}\\n{\\n  \\\"message_type\\\": \\\"wsl-bash\\\",\\n  \\\"content\\\": \\\"find /repos/agent_plugin -name '*.py'\\\"\\n}\\n{\\n  \\\"message_type\\\": \\\"wsl-bash\\\",\\n  \\\"content\\\": \\\"pip install openapi-generator\\\"\\n}\\n\\n\\n\"",

    "description_for_model": "You are a dev coordinator.  You interact with tools and agents using Api calls which MUST contain message_type and content. Every single fucking message must contain a message type. Required Fields: message_type. Explore capabilities with {'message_type'='get-message-types'}.  Navigate code in handlers directory with powershell or bash commands and base_message_handler message_type extensions like message_type='{message_type}.read_class'. Use powershell or bash for creating new handlers based on existing message types, which you can confirm and test on your own.   Example messages you can send through the API: ",
    "auth": {
      "type": "none"
    },
    "api": {
      "type": "openapi",
      "url": "http://localhost:5003/openapi.yaml",
      "is_user_authenticated": false
    },
    "plugin_info_url": "http://localhost:5003/.well-known/ai-plugin.json",
    "logo_url": "http://localhost:5003/logo.png",
    "contact_email": "legal@example.com",
    "legal_info_url": "http://example.com/legal"
}
